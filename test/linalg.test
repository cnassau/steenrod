# -*- tcl -*-
#
# This file provides a test suite for the linear algebra routines
#
# Copyright (C) 2003 Christian Nassau <nassau@nullhomotopie.de>
#
#  $Id$
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 2 as
# published by the Free Software Foundation.
#

if {[lsearch [namespace children] ::tcltest] == -1} {
    package require tcltest
    namespace import -force ::tcltest::*
}

package require Steenrod
namespace import steenrod::*

#test linalg-1.0 {isvector, from list} { isvector {1 10 26 -12 23 } } {1}
#test linalg-1.1 {isvector, from list} { isvector [list 1 10 26 -12 23 ] } {1}
#test linalg-1.2 {isvector, empty list} { isvector [list] } {1}
#test linalg-1.3 {isvector, empty input} { isvector "" } {""}

test linalg-1.4 {matrix test, empty input} { matrix test {} } {}
test linalg-1.5 {matrix test, simple list 4x1} { matrix test {1 0 2 1} } {}
test linalg-1.6 {matrix test, simple list 1x4} { matrix test {{1} {0} {2} {1}} } {}
test linalg-1.7 {matrix test, 1x1} { matrix test {{1}} } {}
test linalg-1.7 {matrix test, 1x1} { matrix test {{1}} } {}    

test linalg-1.9 {matrix test, shared entries} { 
    set i 5 
    set row [list 0 $i $i 5] 
    matrix test [list $row $row $row]
} {}

test linalg-1.10 {string length [matrix test, rows of different length} { 
    set res {}
    lappend res [expr ![string length [matrix test { {0 1} {} }]]]
    lappend res [expr ![string length [matrix test { {0 1} {2} }]]]
    lappend res [expr ![string length [matrix test { {0 1} {7 1} }]]]
    lappend res [expr ![string length [matrix test { {0 1} {7 1 -1} }]]]
} {0 0 1 0}

test linalg-2.0 {matrix dimensions, 0x0} { matrix dimensions {} } {0 0} 
test linalg-2.1 {matrix dimensions, 1x0 - 1x3} { 
    set res {}
    lappend res [matrix dimensions {}] 
    lappend res [matrix dimensions {{}}] 
    lappend res [matrix dimensions {{} {}}] 
    lappend res [matrix dimensions {{} {} {}}] 
} {{0 0} {1 0} {2 0} {3 0}}

test linalg-2.2 {matrix dimensions, 5x1} { matrix dimensions {1 2 3 4 5} } {5 1}
test linalg-2.3 {matrix dimensions, 5x1 (sane)} { matrix dimensions {{1} {2} {3} {4} {5}} } {5 1}

#
# some refcount tests
#

test linalg-3.0 {matrix refcounts, create} {
    steenrod::_refcount [matrix create 5 5]
    # always expect refcount 1, because the interpreter holds a 
    # reference to each argument
} {1} 

test linalg-3. {matrix refcounts, create in variable} {
    set m [matrix create 5 5]
    steenrod::_refcount $m ;# expect 2 references: interpreter + variable 
} {2} 

test linalg-3. {matrix refcounts, addto} {
    set res {}
    set v [steenrod::matrix create 5 5]
    lappend res [steenrod::_refcount $v]  ;# expect 2 references: interpreter + variable 
    matrix addto v [steenrod::matrix create 5 5]
    lappend res [steenrod::_refcount $v]  ;# expect 2 references: interpreter + variable 
} {2 2} 

test linalg-3. {matrix refcounts, } {
} {} 

test linalg-3. {matrix refcounts, } {
} {} 




# cleanup
::tcltest::cleanupTests
return
