# -*- tcl -*-
#
# This file provides a test suite for the polynomial routines
#
# Copyright (C) 2003 Christian Nassau <nassau@nullhomotopie.de>
#
#  $Id$
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 2 as
# published by the Free Software Foundation.
#

if {[lsearch [namespace children] ::tcltest] == -1} {
    package require tcltest
    namespace import -force ::tcltest::*
}

package require Steenrod 1.0

namespace import ::poly::mono

proc ismono m {
    return [expr 0 == [string length [mono test $m]]]
}

test mono-1.0 {mono recognition} {
    set res {}
    lappend res [ismono {}]
    lappend res [ismono {0}]
    lappend res [ismono {0 0}]
    lappend res [ismono {0 0 0}]
    lappend res [ismono {0 0 0 0}]
    lappend res [ismono {0 0 0 0 0}]
    lappend res [ismono {0 0 {} 0}]
    lappend res [ismono {0 -1 {} 0}]
    lappend res [ismono {0 0 {-1} 0}]
    lappend res [ismono {0 0 {0 -1} 0}]
    lappend res [ismono {0 0 {0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0} 0}]
    lappend res [ismono {0 0 {-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1} 0}]
    lappend res [ismono nope]
} {0 0 0 0 1 0 1 1 1 1 0 0 0}

test mono-1.1 {mono length, positive} {
    set res {}
    lappend res [mono length {0 0 {} 0}]
    lappend res [mono length {0 1 {} 0}]
    lappend res [mono length {0 2 {} 0}]
    lappend res [mono length {0 4 {} 0}]
    lappend res [mono length {0 8 {} 0}]
    lappend res [mono length {0 16 {} 0}]
    lappend res [mono length {0 32 {} 0}]
    lappend res [mono length {0 64 {} 0}]
    lappend res [mono length {0 128 {} 0}]
    lappend res [mono length {0 0 {1} 0}]
    lappend res [mono length {0 0 {0 1} 0}]
    lappend res [mono length {0 0 {0 0 1} 0}]
} {0 1 2 3 4 5 6 7 8 1 2 3}

test mono-1.2 {mono length, negative} {
    set res {}
    lappend res [mono length {0 -1 {} 0}]
    lappend res [mono length {0 -2 {} 0}]
    lappend res [mono length {0 -3 {} 0}]
    lappend res [mono length {0 -5 {} 0}]
    lappend res [mono length {0 -1 {-2} 0}]
    lappend res [mono length {0 -1 {-1 0} 0}]
    lappend res [mono length {0 -1 {-1 0 0} 0}]
} {0 1 2 3 1 2 3}

test mono-1.3 {mono rlength, positive} {
    set res {}
    lappend res [mono rlength {0 0 {} 0}]
    lappend res [mono rlength {0 1 {} 0}]
    lappend res [mono rlength {0 2 {} 0}]
    lappend res [mono rlength {0 4 {} 0}]
    lappend res [mono rlength {0 8 {} 0}]
    lappend res [mono rlength {0 16 {} 0}]
    lappend res [mono rlength {0 32 {} 0}]
    lappend res [mono rlength {0 64 {} 0}]
    lappend res [mono rlength {0 128 {} 0}]
    lappend res [mono rlength {0 0 {1} 0}]
    lappend res [mono rlength {0 0 {0 1} 0}]
    lappend res [mono rlength {0 0 {0 0 1} 0}]
} {0 0 0 0 0 0 0 0 0 1 2 3}

test mono-1.4 {mono rlength, negative} {
    set res {}
    lappend res [mono rlength {0 -1 {} 0}]
    lappend res [mono rlength {0 -2 {} 0}]
    lappend res [mono rlength {0 -3 {} 0}]
    lappend res [mono rlength {0 -5 {} 0}]
    lappend res [mono rlength {0 -1 {-2} 0}]
    lappend res [mono rlength {0 -1 {-1 0} 0}]
    lappend res [mono rlength {0 -1 {-1 0 0} 0}]
} {0 0 0 0 1 2 3}

test mono-1.5 {mono padding} {
    set res {}
    lappend res [mono padding {0 0 {} 0}]
    lappend res [mono padding {0 -1 {-1} 0}]
    lappend res [mono padding {0 0 {-1} 0}]
    lappend res [mono padding {0 -1 {0} 0}]
    lappend res [mono padding {0 -1 {0 -1} 0}]
    lappend res [mono padding {0 0 {-1} 0}]
} {0 -1 -1 0 0 -1}

test mono-1.6 {mono isabove} {
    set res {}
    set m1 {0 7 {3 1} 0}
    lappend res [mono isabove $m1 $m1]
    lappend res [mono isabove {0 7 {3 0} 0} $m1]
    lappend res [mono isabove {0 7 {2 1} 0} $m1]
    lappend res [mono isabove {0 7 {4 0} 0} $m1]
    lappend res [mono isabove {0 7 {3 2} 0} $m1]
    lappend res [mono isabove {0 3 {3 0} 0} $m1]
    lappend res [mono isabove {0 3 {2 1} 0} $m1]
    lappend res [mono isabove {0 3 {4 0} 0} $m1]
    lappend res [mono isabove {0 3 {3 2} 0} $m1]
    lappend res [mono isabove {0 15 {3 0} 0} $m1]
    lappend res [mono isabove {0 15 {2 1} 0} $m1]
    lappend res [mono isabove {0 15 {4 0} 0} $m1]
    lappend res [mono isabove {0 15 {3 1} 0} $m1]
} {1 0 0 0 1 0 0 0 0 0 0 0 1}

test mono-1.7 {mono isbelow} {
    set res {}
    set m1 {0 7 {3 1} 0}
    lappend res [mono isbelow $m1 $m1]
    lappend res [mono isbelow {0 7 {3 0} 0} $m1]
    lappend res [mono isbelow {0 7 {2 1} 0} $m1]
    lappend res [mono isbelow {0 7 {4 0} 0} $m1]
    lappend res [mono isbelow {0 7 {3 2} 0} $m1]
    lappend res [mono isbelow {0 3 {3 0} 0} $m1]
    lappend res [mono isbelow {0 3 {2 1} 0} $m1]
    lappend res [mono isbelow {0 3 {4 0} 0} $m1]
    lappend res [mono isbelow {0 3 {3 2} 0} $m1]
    lappend res [mono isbelow {0 15 {3 0} 0} $m1]
    lappend res [mono isbelow {0 15 {2 1} 0} $m1]
    lappend res [mono isbelow {0 15 {4 0} 0} $m1]
    lappend res [mono isbelow {0 15 {3 1} 0} $m1]
} {1 1 1 0 0 1 1 0 0 0 0 0 0}

test mono-1.6 {mono isabove, negative} {
    set res {}
    set m1 {0 -8 {-4 -2} 0}
    lappend res [mono isabove $m1 $m1]
    lappend res [mono isabove {0 0 {-1} 0} $m1]
    lappend res [mono isabove {0 -1 {-1} 0} $m1]
    lappend res [mono isabove {0 -1 {-5 -2} 0} $m1]
    lappend res [mono isabove {0 -1 {-4 -3} 0} $m1]
    lappend res [mono isabove {0 -1 {-2 -1} 0} $m1]
    lappend res [mono isabove {0 -8 {-2 5} 0} $m1]
    lappend res [mono isabove {0 -16 {-2} 0} $m1]
    lappend res [mono isabove {0 -12 {-1} 0} $m1]
} {1 0 1 0 0 1 1 0 0}

test mono-1.7 {mono isbelow, negative} {
    set res {}
    set m1 {0 -8 {-4 -2} 0}
    lappend res [mono isbelow $m1 $m1]
    lappend res [mono isbelow {0 0 {-1} 0} $m1]
    lappend res [mono isbelow {0 -1 {-1} 0} $m1]
    lappend res [mono isbelow {0 -1 {-5 -2} 0} $m1]
    lappend res [mono isbelow {0 -1 {-4 -3} 0} $m1]
    lappend res [mono isbelow {0 -1 {-2 -1} 0} $m1]
    lappend res [mono isbelow {0 -8 {-2 5} 0} $m1]
    lappend res [mono isbelow {0 -16 {-2} 0} $m1]
    lappend res [mono isbelow {0 -12 {-1} 0} $m1]
    lappend res [mono isbelow {0 -16 {-5 -2} 0} $m1]
    lappend res [mono isbelow {0 -8 {-4 -2 -2} 0} $m1]
    lappend res [mono isbelow {0 -15 {-4 -2} 0} $m1]
} {1 0 0 0 0 0 0 0 0 1 1 0}

# cleanup
::tcltest::cleanupTests
return
