# -*- tcl -*-
#
# This file provides a test suite for the secondary Steenrod algebra
#
# Copyright (C) 2011 Christian Nassau <nassau@nullhomotopie.de>
#
#  $Id$
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 2 as
# published by the Free Software Foundation.
#

if {[lsearch [namespace children] ::tcltest] == -1} {
    package require tcltest
    namespace import -force ::tcltest::*
}

if {[file exists pkgIndex.tcl]} {
    set dir [pwd]
    source pkgIndex.tcl
    set auto_path something_useless
}

package require Steenrod 

source src/a2nd.tc
namespace import -force steenrod::*


# --------------------------------------------------------------------------

test a2nd-1 {basis enumeration} {
} {}

test a2nd-2 {printing} { 
   set res {}
   foreach {itm exp} {
      {{} {}} 0
      {{} {{1 0 0 0}}} 1
      {{} {{1 0 1 0}}} Sq(1)
      {{} {{2 0 1 0}}} {2 Sq(1)}
      {{} {{3 0 {0 2} 0} {1 0 1 0}}} {3 Sq(0,2) + Sq(1)}
      {X-1,3 {{1 0 {0 1} 0}}} {X-1,3 Sq(0,1)} 
      {U1,2 {{1 0 {3} 0} {1 0 {2 1} 0}}} {U1,2 (Sq(3) + Sq(2,1))} 
   } {
      set pr [A2nd print $itm]
      set pr2 [string map {{ } {}} $pr]
      set exp2 [string map {{ } {}} $exp]
      if {$pr2 ne $exp2} {
         lappend res "$itm: got >$pr<, expected >$exp<" 
      }
   }
   join $res \n
} {}

test a2nd-3 {comparison} {
   set res {}
   set smpl {}
   lappend smpl {{} {}}
   lappend smpl {{} {{1 0 0 0}}}
   lappend smpl {{} {{2 0 0 0}}}
   lappend smpl {{} {{1 0 1 0}}}
   lappend smpl {{X1,2} {{1 0 0 0}}}
   lappend smpl {{iota} {{1 0 0 0}}}
   lappend smpl {{X1,2} {{1 0 1 0}}}
   lappend smpl {{M1,2} {{1 0 0 0}}}
   foreach a $smpl {
   	set a2 [list {*}$a {} {}] ;# a2 = a + 0
        if {[A2nd compare $a $a2]} {
	   lappend res "a!=a+0 for a=>$a<"
	}
	if {[A2nd compare $a $a]} {
	   lappend res "a!=a for a=>$a<"
	}
	foreach b $smpl {
           if {$a eq $b} continue
	   if {![A2nd compare $a $b]} {
              lappend res "a=b for a=>$a<, b=>$b<"
	   }
	}
   }
   join $res \n
} {}

test a2nd-4 {} {} {}
test a2nd-5 {} {} {}

# --------------------------------------------------------------------------

# cleanup
::tcltest::cleanupTests
return

